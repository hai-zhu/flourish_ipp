%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.41.0 (http://poppler.freedesktop.org)
%%Creator: \050MATLAB, The Mathworks, Inc. Version 9.3.0.713579 \\(R2017b\\). Operating System: Linux)
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 194 175
%%HiResBoundingBox: 0 0 193.05 174.5
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font LJFNUH+Times-Roman
%!FontType1-1.0: LJFNUH+Times-Roman
12 dict begin
/FontInfo 10 dict dup begin
/Notice (Copyright \(URW\)++,Copyright 2014 by \(URW\)++ Design & Develo\
pment) readonly def
/FullName (Nimbus Roman No9 L Regular) readonly def
/FamilyName (Nimbus Roman No9 L) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /LJFNUH+Times-Roman def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [0 -218 775 676] readonly def
/StrokeWidth 0 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 40 /parenleft put
dup 41 /parenright put
dup 45 /hyphen put
dup 48 /zero put
dup 50 /two put
dup 109 /m put
dup 120 /x put
dup 121 /y put
dup 122 /z put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF5
CE16D9AA77431038EA7920FFEBF54E6143E306DC7F199A9AE76599F0F0C97BB1
E6D10C6B128F198FF07BD074305000151BA359478A2E632CD679450B539DC1EC
D5F0409998F9503A4D27964840AC7D0F770FB7246693361B78175853651F3CD1
5D54BE9A1DB932E4C0306C52F0EF5AD79EC9EA17F85381FFE7C09785BD401E93
B197316F5A5ADD6C6CBF285FA6F4AD0121C6F8E6E84D300EB6AEB64612819DB3
F6151DE9DF85C9989C156945080D1512F41A914F6F176E14130458C03D624EF6
6E7B0934B02A989231911E2C01A993392C5AD45E4B7FC17B41310510F8C6D095
B77A0E40D2ED1DF03B8F92941D656ECBD591FC921182E146E92ADAB00AFB5345
8BEE5E77D3567F38EFD67755B28F5A2DA58F3DE97DB346930F514C900BE69449
7C21079B11EE58CE1CBB0CE2A8C4D121F40E738CAE272CB3518CFEA529E41251
2B0C5FEB05A7B90B251980E1F70B4494B46B98DFEBB5C8E460A79EC6696308B3
8472B1A28EAA57F1F24D8D1D9F7699D38F15FD776243A96CE755B465CB896488
68DBAE78EC4C3A93DB0BB1FF5D6A0F024EA18E82FA3E925E421259F34E426ECF
19AE659B36E74C184F35DC88CF1F9C9AD4BD63A53BC2DE21A1D53CAC5811CD6A
F6C23B25DB26A061C7EDCB130CC5341B50563544715C88B4E185791302AD6784
EAD74ABA411E75A4AFBFC0F60F3132953B4267243B2197D29D9825BD374D598F
AA2BBBFAF7FA1BEA0537A8CA6295D272BA87D8B0F62FB938B7396412EF93E51C
2E52437AAF3D8DBEDA82632F3F9716DBCFAAB74A1A0A012823B7882011249752
085B64E9D8CBF5BCEF66291ED4855BEB25BEC5B32710537F9F52F48320B07929
64F9DAB5A3F144B722948B2BAC5BBCACEF7722F3BDD3D9940CCA9896D4AB636B
6C0C247E22529F03A68424A7F3E9B8B75BFDB4AB358E7B8F635D7C5450B6D93C
B2754047A2F7F911605B1548B46F6CD169E05153D503A58CEE5D59FA0F982CCC
9CE1A4BAF3281163A0A0F73258D823089CDF9254029E0B92699CB59B4D3955F5
DCB2487A4C626F1D8D027425C2698B4E25EB50DEBEC1E009F3B63FD8DB293A09
6C781EF3DFFB2C4DC1CFA196B2E68B628C5C6157FE6687A2E791E24CF4E360DD
09ABCE6F9643B8686664952620068A69D1BAC210B42C11099FD948A0ACF1E13D
412945BF5824E8F1D69B75CDDEEEB204B2349B3A7DAD2435876515376A03763B
160E78798AF44728F27A32876887903933FD37784B747151448EC04780DC99E1
5BB8C1F1B34D82AE1D5F133CD2A975CB75799CD09EEB97981DDB0E2126AB87D1
FEB761F3BC20B2124F4D0F3618BEC1BEF41635CFE82E1361850ACE6253AD9BDB
0212CE267C57CF9BBC0BBC1FD59EE831DA04B9B7CFEB39185514D2BB699A4CD9
D137F63ACEB5912AACCA5E605CBBA7DC87E6259C577D9013AD8975C828E5C174
42BA1A9DCFE9BDB227D4A1AA5EB78113B5D93A5BAA7D3D2045122F572AC3D462
0D3CD08FD95A6FA0C9C1512B84E6A5DE49EE533AA248EF5DD053C07D9567A904
EF32368C877BCB018165A4348132DC272F54926BAA61A12ED31E083B8229160D
209DD510D00AE3160257E18079CB5D0CABBE09AAA8DA727DBD8C244D2D281D0E
F8C9C5B35F822AA3F018627E4456FB3C58E34CD5E059EAFE68B5811778B3D224
952E2B9088AF159FDCF8E3E901EB812BC19A92297044EDEB6EFAD2B91083CE54
EF6E63288C9A01C5ED437BF3FEB37771006D98FC5287D9DBC98B082959808292
60AAE70906419E143E56AC9CCB2D5B613B9E6CE9F8A39E77D99EE4BC7055C8E8
C8E5DF0D71F0E3C7599B6EAB7278626B8B4839CC32FF7FDDB3F8A82AF10F8AD0
904E8BA60ADE018A84EADB1D78C150AE590BF12723707FB4A10E76F05A840AF9
1BBE03A2A18A990998304617F59A8772D26C2B3B210CD6E55B4EF6D7C6E19FAC
6655043EB3B4D37969272A5B2509F09EC892EE1A73FC2D061BEE13296C2252E2
9788DB487B3F2748B82AB75494583505A53F13D4A0BB322EDDEA27A9878571A5
1ED6D92B10917E7B26329E9D8AA9D7F689043B0216358086933A27DC06B1E872
D4AE36500A1FF69C45905435B9FDD905213A0952D9B24377E0
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F8_0 /LJFNUH+Times-Roman 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 193.05 174.5 re
W
q
q
[0.1 0 0 0.1 0 0] cm
/DeviceGray {} cs
[1] sc
953.555 265 m
1741.3 567.227 l
1741.3 1341.13 l
1136.84 1735 l
349.102 1432.77 l
349.102 658.871 l
f
[7.5 22.5] 0 d
5.0025 w
2 j
/DeviceGray {} CS
[0.7754] SC
1052.02 302.777 m
447.57 696.648 l
S
1150.49 340.555 m
546.035 734.426 l
S
1248.96 378.332 m
644.504 772.203 l
S
1445.89 453.895 m
841.438 847.758 l
S
1544.36 491.672 m
939.906 885.535 l
S
1642.83 529.449 m
1038.38 923.32 l
S
447.57 696.648 m
447.57 1470.55 l
S
546.035 734.426 m
546.035 1508.33 l
S
644.504 772.203 m
644.504 1546.11 l
S
841.438 847.758 m
841.438 1621.67 l
S
939.906 885.535 m
939.906 1659.45 l
S
1038.38 923.32 m
1038.38 1697.22 l
S
[] 0 d
1 j
/DeviceGray {} CS
[0.873] SC
953.555 265 m
349.102 658.871 l
S
1347.43 416.109 m
742.973 809.98 l
S
1741.3 567.227 m
1136.84 961.098 l
S
349.102 658.871 m
349.102 1432.77 l
S
742.973 809.98 m
742.973 1583.89 l
S
1136.84 961.098 m
1136.84 1735 l
S
[7.5 22.5] 0 d
2 j
/DeviceGray {} CS
[0.7754] SC
1665.73 616.457 m
878 314.23 l
S
1590.18 665.695 m
802.445 363.469 l
S
1514.63 714.926 m
726.883 412.699 l
S
1363.51 813.395 m
575.773 511.164 l
S
1287.95 862.629 m
500.219 560.402 l
S
1212.39 911.859 m
424.664 609.633 l
S
1665.73 1390.37 m
1665.73 616.457 l
S
1590.18 1439.6 m
1590.18 665.695 l
S
1514.63 1488.84 m
1514.63 714.926 l
S
1363.51 1587.3 m
1363.51 813.395 l
S
1287.95 1636.53 m
1287.95 862.629 l
S
1212.39 1685.77 m
1212.39 911.859 l
S
[] 0 d
1 j
/DeviceGray {} CS
[0.873] SC
1741.3 567.227 m
953.555 265 l
S
1439.07 764.164 m
651.328 461.934 l
S
1136.84 961.098 m
349.102 658.871 l
S
1741.3 1341.13 m
1741.3 567.227 l
S
1439.07 1538.07 m
1439.07 764.164 l
S
1136.84 1735 m
1136.84 961.098 l
S
[7.5 22.5] 0 d
2 j
/DeviceGray {} CS
[0.7754] SC
1136.84 1090.08 m
349.102 787.855 l
S
1136.84 1219.06 m
349.102 916.84 l
S
1136.84 1348.05 m
349.102 1045.82 l
S
1136.84 1606.02 m
349.102 1303.79 l
S
1136.84 1735 m
349.102 1432.77 l
S
1741.3 696.211 m
1136.84 1090.08 l
S
1741.3 825.199 m
1136.84 1219.06 l
S
1741.3 954.176 m
1136.84 1348.05 l
S
1741.3 1212.14 m
1136.84 1606.02 l
S
1741.3 1341.13 m
1136.84 1735 l
S
[] 0 d
1 j
/DeviceGray {} CS
[0.873] SC
1136.84 961.098 m
349.102 658.871 l
S
1136.84 1477.03 m
349.102 1174.8 l
S
1741.3 567.227 m
1136.84 961.098 l
S
1741.3 1083.16 m
1136.84 1477.03 l
S
/DeviceGray {} cs
[0] sc
1123.78 880.301 m
1123.78 872.016 1117.06 865.301 1108.78 865.301 c
1100.49 865.301 1093.78 872.016 1093.78 880.301 c
1093.78 888.59 1100.49 895.301 1108.78 895.301 c
1117.06 895.301 1123.78 888.59 1123.78 880.301 c
f
843.145 772.633 m
843.145 764.348 836.43 757.633 828.145 757.633 c
819.855 757.633 813.145 764.348 813.145 772.633 c
813.145 780.922 819.855 787.633 828.145 787.633 c
836.43 787.633 843.145 780.922 843.145 772.633 c
f
1339.11 739.984 m
1339.11 731.699 1332.4 724.984 1324.11 724.984 c
1315.82 724.984 1309.11 731.699 1309.11 739.984 c
1309.11 748.273 1315.82 754.984 1324.11 754.984 c
1332.4 754.984 1339.11 748.273 1339.11 739.984 c
f
/DeviceGray {} cs
[0.1489] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 23.4566 65.3156] Tm
0 0 Td
/F8_0 12 Tf
(0)
[6
0] Tj
Q
2 J
/DeviceGray {} CS
[0.1489] SC
349.102 658.871 m
331.43 670.383 l
S
/DeviceGray {} cs
[0] sc
1099.72 1046.91 m
1099.72 1038.62 1093.01 1031.91 1084.72 1031.91 c
1076.43 1031.91 1069.72 1038.62 1069.72 1046.91 c
1069.72 1055.2 1076.43 1061.91 1084.72 1061.91 c
1093.01 1061.91 1099.72 1055.2 1099.72 1046.91 c
f
349.102 658.871 m
349.102 1432.77 l
S
953.555 265 m
349.102 658.871 l
S
349.102 658.871 m
329.414 651.309 l
S
/DeviceGray {} cs
[0.1489] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 16.8328 52.3051] Tm
0 0 Td
/F8_0 12 Tf
(20)
[6
0
6
0] Tj
Q
/DeviceGray {} cs
[0] sc
562.512 664.965 m
562.512 656.68 555.801 649.965 547.512 649.965 c
539.227 649.965 532.512 656.68 532.512 664.965 c
532.512 673.254 539.227 679.965 547.512 679.965 c
555.801 679.965 562.512 673.254 562.512 664.965 c
f
1058.48 632.316 m
1058.48 624.031 1051.77 617.316 1043.48 617.316 c
1035.19 617.316 1028.48 624.031 1028.48 632.316 c
1028.48 640.605 1035.19 647.316 1043.48 647.316 c
1051.77 647.316 1058.48 640.605 1058.48 632.316 c
f
953.555 265 m
1741.3 567.227 l
S
1741.3 567.227 m
1758.96 555.707 l
S
1554.45 599.672 m
1554.45 591.383 1547.73 584.672 1539.45 584.672 c
1531.16 584.672 1524.45 591.383 1524.45 599.672 c
1524.45 607.957 1531.16 614.672 1539.45 614.672 c
1547.73 614.672 1554.45 607.957 1554.45 599.672 c
f
745.238 910.906 m
745.238 902.617 738.523 895.906 730.238 895.906 c
721.949 895.906 715.238 902.617 715.238 910.906 c
715.238 919.195 721.949 925.906 730.238 925.906 c
738.523 925.906 745.238 919.195 745.238 910.906 c
f
/DeviceGray {} cs
[0.1489] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 179.583 41.9188] Tm
0 0 Td
/F8_0 12 Tf
(20)
[6
0
6
0] Tj
[0 1 -1 0 10.4012 90.332] Tm
0 0 Td
/F8_0 13.2 Tf
(z \(m\))
[5.8608
0
3.3
0
4.3956
0
10.2696
0
4.3956
0] Tj
[1 0 0 1 17.4566 116.909] Tm
0 0 Td
/F8_0 12 Tf
(20)
[6
0
6
0] Tj
Q
349.102 1174.8 m
331.43 1186.32 l
S
/DeviceGray {} cs
[0] sc
1371.72 869.668 m
1371.72 861.379 1365.01 854.668 1356.72 854.668 c
1348.43 854.668 1341.72 861.379 1341.72 869.668 c
1341.72 877.953 1348.43 884.668 1356.72 884.668 c
1365.01 884.668 1371.72 877.953 1371.72 869.668 c
f
777.848 524.648 m
777.848 516.363 771.137 509.648 762.848 509.648 c
754.563 509.648 747.848 516.363 747.848 524.648 c
747.848 532.938 754.563 539.648 762.848 539.648 c
771.137 539.648 777.848 532.938 777.848 524.648 c
f
1072.23 1200.46 m
1072.23 1192.18 1065.52 1185.46 1057.23 1185.46 c
1048.94 1185.46 1042.23 1192.18 1042.23 1200.46 c
1042.23 1208.75 1048.94 1215.46 1057.23 1215.46 c
1065.52 1215.46 1072.23 1208.75 1072.23 1200.46 c
f
/DeviceGray {} cs
[0.1489] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 17.9852 7.0875] Tm
0 0 Td
/F8_0 13.2 Tf
(x \(m\))
[6.6
0
3.3
0
4.3956
0
10.2696
0
4.3956
0] Tj
Q
1 J
651.328 461.934 m
631.633 454.375 l
S
/DeviceGray {} cs
[0] sc
1273.82 492.004 m
1273.82 483.715 1267.11 477.004 1258.82 477.004 c
1250.53 477.004 1243.82 483.715 1243.82 492.004 c
1243.82 500.289 1250.53 507.004 1258.82 507.004 c
1267.11 507.004 1273.82 500.289 1273.82 492.004 c
f
/DeviceGray {} cs
[0.1489] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 53.0555 32.6117] Tm
0 0 Td
/F8_0 12 Tf
(0)
[6
0] Tj
95.0027 -27.8152 Td
/F8_0 13.2 Tf
(y \(m\))
[6.6
0
3.3
0
4.3956
0
10.2696
0
4.3956
0] Tj
Q
1347.43 416.109 m
1365.1 404.598 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 140.196 26.8078] Tm
0 0 Td
/F8_0 12 Tf
(0)
[6
0] Tj
Q
/DeviceGray {} cs
[0] sc
1017.24 733.664 m
1017.24 725.379 1010.53 718.664 1002.24 718.664 c
993.953 718.664 987.242 725.379 987.242 733.664 c
987.242 741.953 993.953 748.664 1002.24 748.664 c
1010.53 748.664 1017.24 741.953 1017.24 733.664 c
f
993.184 384.336 m
993.184 376.047 986.473 369.336 978.184 369.336 c
969.898 369.336 963.184 376.047 963.184 384.336 c
963.184 392.621 969.898 399.336 978.184 399.336 c
986.473 399.336 993.184 392.621 993.184 384.336 c
f
953.555 265 m
933.859 257.449 l
S
953.555 265 m
971.227 253.488 l
S
/DeviceGray {} cs
[0.1489] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 72.7781 12.9184] Tm
0 0 Td
/F8_0 12 Tf
(-20)
[3.996
0
6
0
6
0] Tj
28.0313 -1.22188 Td
(-20)
[3.996
0
6
0
6
0] Tj
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font LJFNUH+Times-Roman
%%EOF
