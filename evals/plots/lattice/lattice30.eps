%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.41.0 (http://poppler.freedesktop.org)
%%Creator: \050MATLAB, The Mathworks, Inc. Version 9.3.0.713579 \\(R2017b\\). Operating System: Linux)
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 194 175
%%HiResBoundingBox: 0 0 193.05 174.5
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font LJFNUH+Times-Roman
%!FontType1-1.0: LJFNUH+Times-Roman
12 dict begin
/FontInfo 10 dict dup begin
/Notice (Copyright \(URW\)++,Copyright 2014 by \(URW\)++ Design & Develo\
pment) readonly def
/FullName (Nimbus Roman No9 L Regular) readonly def
/FamilyName (Nimbus Roman No9 L) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /LJFNUH+Times-Roman def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [0 -218 775 676] readonly def
/StrokeWidth 0 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 40 /parenleft put
dup 41 /parenright put
dup 45 /hyphen put
dup 48 /zero put
dup 50 /two put
dup 109 /m put
dup 120 /x put
dup 121 /y put
dup 122 /z put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF5
CE16D9AA77431038EA7920FFEBF54E6143E306DC7F199A9AE76599F0F0C97BB1
E6D10C6B128F198FF07BD074305000151BA359478A2E632CD679450B539DC1EC
D5F0409998F9503A4D27964840AC7D0F770FB7246693361B78175853651F3CD1
5D54BE9A1DB932E4C0306C52F0EF5AD79EC9EA17F85381FFE7C09785BD401E93
B197316F5A5ADD6C6CBF285FA6F4AD0121C6F8E6E84D300EB6AEB64612819DB3
F6151DE9DF85C9989C156945080D1512F41A914F6F176E14130458C03D624EF6
6E7B0934B02A989231911E2C01A993392C5AD45E4B7FC17B41310510F8C6D095
B77A0E40D2ED1DF03B8F92941D656ECBD591FC921182E146E92ADAB00AFB5345
8BEE5E77D3567F38EFD67755B28F5A2DA58F3DE97DB346930F514C900BE69449
7C21079B11EE58CE1CBB0CE2A8C4D121F40E738CAE272CB3518CFEA529E41251
2B0C5FEB05A7B90B251980E1F70B4494B46B98DFEBB5C8E460A79EC6696308B3
8472B1A28EAA57F1F24D8D1D9F7699D38F15FD776243A96CE755B465CB896488
68DBAE78EC4C3A93DB0BB1FF5D6A0F024EA18E82FA3E925E421259F34E426ECF
19AE659B36E74C184F35DC88CF1F9C9AD4BD63A53BC2DE21A1D53CAC5811CD6A
F6C23B25DB26A061C7EDCB130CC5341B50563544715C88B4E185791302AD6784
EAD74ABA411E75A4AFBFC0F60F3132953B4267243B2197D29D9825BD374D598F
AA2BBBFAF7FA1BEA0537A8CA6295D272BA87D8B0F62FB938B7396412EF93E51C
2E52437AAF3D8DBEDA82632F3F9716DBCFAAB74A1A0A012823B7882011249752
085B64E9D8CBF5BCEF66291ED4855BEB25BEC5B32710537F9F52F48320B07929
64F9DAB5A3F144B722948B2BAC5BBCACEF7722F3BDD3D9940CCA9896D4AB636B
6C0C247E22529F03A68424A7F3E9B8B75BFDB4AB358E7B8F635D7C5450B6D93C
B2754047A2F7F911605B1548B46F6CD169E05153D503A58CEE5D59FA0F982CCC
9CE1A4BAF3281163A0A0F73258D823089CDF9254029E0B92699CB59B4D3955F5
DCB2487A4C626F1D8D027425C2698B4E25EB50DEBEC1E009F3B63FD8DB293A09
6C781EF3DFFB2C4DC1CFA196B2E68B628C5C6157FE6687A2E791E24CF4E360DD
09ABCE6F9643B8686664952620068A69D1BAC210B42C11099FD948A0ACF1E13D
412945BF5824E8F1D69B75CDDEEEB204B2349B3A7DAD2435876515376A03763B
160E78798AF44728F27A32876887903933FD37784B747151448EC04780DC99E1
5BB8C1F1B34D82AE1D5F133CD2A975CB75799CD09EEB97981DDB0E2126AB87D1
FEB761F3BC20B2124F4D0F3618BEC1BEF41635CFE82E1361850ACE6253AD9BDB
0212CE267C57CF9BBC0BBC1FD59EE831DA04B9B7CFEB39185514D2BB699A4CD9
D137F63ACEB5912AACCA5E605CBBA7DC87E6259C577D9013AD8975C828E5C174
42BA1A9DCFE9BDB227D4A1AA5EB78113B5D93A5BAA7D3D2045122F572AC3D462
0D3CD08FD95A6FA0C9C1512B84E6A5DE49EE533AA248EF5DD053C07D9567A904
EF32368C877BCB018165A4348132DC272F54926BAA61A12ED31E083B8229160D
209DD510D00AE3160257E18079CB5D0CABBE09AAA8DA727DBD8C244D2D281D0E
F8C9C5B35F822AA3F018627E4456FB3C58E34CD5E059EAFE68B5811778B3D224
952E2B9088AF159FDCF8E3E901EB812BC19A92297044EDEB6EFAD2B91083CE54
EF6E63288C9A01C5ED437BF3FEB37771006D98FC5287D9DBC98B082959808292
60AAE70906419E143E56AC9CCB2D5B613B9E6CE9F8A39E77D99EE4BC7055C8E8
C8E5DF0D71F0E3C7599B6EAB7278626B8B4839CC32FF7FDDB3F8A82AF10F8AD0
904E8BA60ADE018A84EADB1D78C150AE590BF12723707FB4A10E76F05A840AF9
1BBE03A2A18A990998304617F59A8772D26C2B3B210CD6E55B4EF6D7C6E19FAC
6655043EB3B4D37969272A5B2509F09EC892EE1A73FC2D061BEE13296C2252E2
9788DB487B3F2748B82AB75494583505A53F13D4A0BB322EDDEA27A9878571A5
1ED6D92B10917E7B26329E9D8AA9D7F689043B0216358086933A27DC06B1E872
D4AE36500A1FF69C45905435B9FDD905213A0952D9B24377E0
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F8_0 /LJFNUH+Times-Roman 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 193.05 174.5 re
W
q
q
[0.1 0 0 0.1 0 0] cm
/DeviceGray {} cs
[1] sc
953.555 265 m
1741.3 567.227 l
1741.3 1341.13 l
1136.84 1735 l
349.102 1432.77 l
349.102 658.871 l
f
[7.5 22.5] 0 d
5.0025 w
2 j
/DeviceGray {} CS
[0.7754] SC
1052.02 302.777 m
447.57 696.648 l
S
1150.49 340.555 m
546.035 734.426 l
S
1248.96 378.332 m
644.504 772.203 l
S
1445.89 453.895 m
841.438 847.758 l
S
1544.36 491.672 m
939.906 885.535 l
S
1642.83 529.449 m
1038.38 923.32 l
S
447.57 696.648 m
447.57 1470.55 l
S
546.035 734.426 m
546.035 1508.33 l
S
644.504 772.203 m
644.504 1546.11 l
S
841.438 847.758 m
841.438 1621.67 l
S
939.906 885.535 m
939.906 1659.45 l
S
1038.38 923.32 m
1038.38 1697.22 l
S
[] 0 d
1 j
/DeviceGray {} CS
[0.873] SC
953.555 265 m
349.102 658.871 l
S
1347.43 416.109 m
742.973 809.98 l
S
1741.3 567.227 m
1136.84 961.098 l
S
349.102 658.871 m
349.102 1432.77 l
S
742.973 809.98 m
742.973 1583.89 l
S
1136.84 961.098 m
1136.84 1735 l
S
[7.5 22.5] 0 d
2 j
/DeviceGray {} CS
[0.7754] SC
1665.73 616.457 m
878 314.23 l
S
1590.18 665.695 m
802.445 363.469 l
S
1514.63 714.926 m
726.883 412.699 l
S
1363.51 813.395 m
575.773 511.164 l
S
1287.95 862.629 m
500.219 560.402 l
S
1212.39 911.859 m
424.664 609.633 l
S
1665.73 1390.37 m
1665.73 616.457 l
S
1590.18 1439.6 m
1590.18 665.695 l
S
1514.63 1488.84 m
1514.63 714.926 l
S
1363.51 1587.3 m
1363.51 813.395 l
S
1287.95 1636.53 m
1287.95 862.629 l
S
1212.39 1685.77 m
1212.39 911.859 l
S
[] 0 d
1 j
/DeviceGray {} CS
[0.873] SC
1741.3 567.227 m
953.555 265 l
S
1439.07 764.164 m
651.328 461.934 l
S
1136.84 961.098 m
349.102 658.871 l
S
1741.3 1341.13 m
1741.3 567.227 l
S
1439.07 1538.07 m
1439.07 764.164 l
S
1136.84 1735 m
1136.84 961.098 l
S
[7.5 22.5] 0 d
2 j
/DeviceGray {} CS
[0.7754] SC
1136.84 1090.08 m
349.102 787.855 l
S
1136.84 1219.06 m
349.102 916.84 l
S
1136.84 1348.05 m
349.102 1045.82 l
S
1136.84 1606.02 m
349.102 1303.79 l
S
1136.84 1735 m
349.102 1432.77 l
S
1741.3 696.211 m
1136.84 1090.08 l
S
1741.3 825.199 m
1136.84 1219.06 l
S
1741.3 954.176 m
1136.84 1348.05 l
S
1741.3 1212.14 m
1136.84 1606.02 l
S
1741.3 1341.13 m
1136.84 1735 l
S
[] 0 d
1 j
/DeviceGray {} CS
[0.873] SC
1136.84 961.098 m
349.102 658.871 l
S
1136.84 1477.03 m
349.102 1174.8 l
S
1741.3 567.227 m
1136.84 961.098 l
S
1741.3 1083.16 m
1136.84 1477.03 l
S
/DeviceGray {} cs
[0] sc
1125.49 886.828 m
1125.49 878.539 1118.78 871.828 1110.49 871.828 c
1102.21 871.828 1095.49 878.539 1095.49 886.828 c
1095.49 895.117 1102.21 901.828 1110.49 901.828 c
1118.78 901.828 1125.49 895.117 1125.49 886.828 c
f
938.406 815.051 m
938.406 806.762 931.695 800.051 923.406 800.051 c
915.117 800.051 908.406 806.762 908.406 815.051 c
908.406 823.336 915.117 830.051 923.406 830.051 c
931.695 830.051 938.406 823.336 938.406 815.051 c
f
1269.05 793.285 m
1269.05 784.996 1262.34 778.285 1254.05 778.285 c
1245.76 778.285 1239.05 784.996 1239.05 793.285 c
1239.05 801.57 1245.76 808.285 1254.05 808.285 c
1262.34 808.285 1269.05 801.57 1269.05 793.285 c
f
751.32 743.27 m
751.32 734.984 744.605 728.27 736.32 728.27 c
728.031 728.27 721.32 734.984 721.32 743.27 c
721.32 751.559 728.031 758.27 736.32 758.27 c
744.605 758.27 751.32 751.559 751.32 743.27 c
f
1104.88 1014.89 m
1104.88 1006.61 1098.16 999.891 1089.88 999.891 c
1081.59 999.891 1074.88 1006.61 1074.88 1014.89 c
1074.88 1023.18 1081.59 1029.89 1089.88 1029.89 c
1098.16 1029.89 1104.88 1023.18 1104.88 1014.89 c
f
/DeviceGray {} cs
[0.1489] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 23.4566 65.3156] Tm
0 0 Td
/F8_0 12 Tf
(0)
[6
0] Tj
Q
/DeviceGray {} cs
[0] sc
1081.96 721.504 m
1081.96 713.219 1075.25 706.504 1066.96 706.504 c
1058.68 706.504 1051.96 713.219 1051.96 721.504 c
1051.96 729.793 1058.68 736.504 1066.96 736.504 c
1075.25 736.504 1081.96 729.793 1081.96 721.504 c
f
2 J
/DeviceGray {} CS
[0.1489] SC
349.102 658.871 m
331.43 670.383 l
S
1412.61 699.742 m
1412.61 691.453 1405.89 684.742 1397.61 684.742 c
1389.32 684.742 1382.61 691.453 1382.61 699.742 c
1382.61 708.027 1389.32 714.742 1397.61 714.742 c
1405.89 714.742 1412.61 708.027 1412.61 699.742 c
f
953.555 265 m
349.102 658.871 l
S
349.102 658.871 m
349.102 1432.77 l
S
349.102 658.871 m
329.414 651.309 l
S
564.23 671.492 m
564.23 663.203 557.52 656.492 549.23 656.492 c
540.945 656.492 534.23 663.203 534.23 671.492 c
534.23 679.781 540.945 686.492 549.23 686.492 c
557.52 686.492 564.23 679.781 564.23 671.492 c
f
/DeviceGray {} cs
[0.1489] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 16.8328 52.3051] Tm
0 0 Td
/F8_0 12 Tf
(20)
[6
0
6
0] Tj
Q
/DeviceGray {} cs
[0] sc
912.863 941.223 m
912.863 932.938 906.152 926.223 897.863 926.223 c
889.574 926.223 882.863 932.938 882.863 941.223 c
882.863 949.512 889.574 956.223 897.863 956.223 c
906.152 956.223 912.863 949.512 912.863 941.223 c
f
894.875 649.727 m
894.875 641.438 888.164 634.727 879.875 634.727 c
871.59 634.727 864.875 641.438 864.875 649.727 c
864.875 658.016 871.59 664.727 879.875 664.727 c
888.164 664.727 894.875 658.016 894.875 649.727 c
f
1252.21 918.887 m
1252.21 910.598 1245.5 903.887 1237.21 903.887 c
1228.92 903.887 1222.21 910.598 1222.21 918.887 c
1222.21 927.176 1228.92 933.887 1237.21 933.887 c
1245.5 933.887 1252.21 927.176 1252.21 918.887 c
f
1225.52 627.961 m
1225.52 619.676 1218.81 612.961 1210.52 612.961 c
1202.23 612.961 1195.52 619.676 1195.52 627.961 c
1195.52 636.25 1202.23 642.961 1210.52 642.961 c
1218.81 642.961 1225.52 636.25 1225.52 627.961 c
f
1556.16 606.195 m
1556.16 597.91 1549.45 591.195 1541.16 591.195 c
1532.88 591.195 1526.16 597.91 1526.16 606.195 c
1526.16 614.484 1532.88 621.195 1541.16 621.195 c
1549.45 621.195 1556.16 614.484 1556.16 606.195 c
f
953.555 265 m
1741.3 567.227 l
S
1741.3 567.227 m
1758.96 555.707 l
S
1084.25 1142.96 m
1084.25 1134.67 1077.54 1127.96 1069.25 1127.96 c
1060.97 1127.96 1054.25 1134.67 1054.25 1142.96 c
1054.25 1151.24 1060.97 1157.96 1069.25 1157.96 c
1077.54 1157.96 1084.25 1151.24 1084.25 1142.96 c
f
720.852 867.559 m
720.852 859.27 714.141 852.559 705.852 852.559 c
697.566 852.559 690.852 859.27 690.852 867.559 c
690.852 875.844 697.566 882.559 705.852 882.559 c
714.141 882.559 720.852 875.844 720.852 867.559 c
f
707.789 577.949 m
707.789 569.66 701.074 562.949 692.789 562.949 c
684.5 562.949 677.789 569.66 677.789 577.949 c
677.789 586.234 684.5 592.949 692.789 592.949 c
701.074 592.949 707.789 586.234 707.789 577.949 c
f
1060.2 845.219 m
1060.2 836.93 1053.48 830.219 1045.2 830.219 c
1036.91 830.219 1030.2 836.93 1030.2 845.219 c
1030.2 853.508 1036.91 860.219 1045.2 860.219 c
1053.48 860.219 1060.2 853.508 1060.2 845.219 c
f
/DeviceGray {} cs
[0.1489] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 179.583 41.9188] Tm
0 0 Td
/F8_0 12 Tf
(20)
[6
0
6
0] Tj
[0 1 -1 0 10.4012 90.332] Tm
0 0 Td
/F8_0 13.2 Tf
(z \(m\))
[5.8608
0
3.3
0
4.3956
0
10.2696
0
4.3956
0] Tj
[1 0 0 1 17.4566 116.909] Tm
0 0 Td
/F8_0 12 Tf
(20)
[6
0
6
0] Tj
Q
/DeviceGray {} cs
[0] sc
1038.43 556.184 m
1038.43 547.895 1031.72 541.184 1023.43 541.184 c
1015.14 541.184 1008.43 547.895 1008.43 556.184 c
1008.43 564.469 1015.14 571.184 1023.43 571.184 c
1031.72 571.184 1038.43 564.469 1038.43 556.184 c
f
1399.54 822.883 m
1399.54 814.594 1392.83 807.883 1384.54 807.883 c
1376.26 807.883 1369.54 814.594 1369.54 822.883 c
1369.54 831.168 1376.26 837.883 1384.54 837.883 c
1392.83 837.883 1399.54 831.168 1399.54 822.883 c
f
1369.08 534.418 m
1369.08 526.129 1362.37 519.418 1354.08 519.418 c
1345.79 519.418 1339.08 526.129 1339.08 534.418 c
1339.08 542.707 1345.79 549.418 1354.08 549.418 c
1362.37 549.418 1369.08 542.707 1369.08 534.418 c
f
349.102 1174.8 m
331.43 1186.32 l
S
877.473 1063.62 m
877.473 1055.34 870.762 1048.62 862.473 1048.62 c
854.188 1048.62 847.473 1055.34 847.473 1063.62 c
847.473 1071.91 854.188 1078.62 862.473 1078.62 c
870.762 1078.62 877.473 1071.91 877.473 1063.62 c
f
868.188 771.551 m
868.188 763.266 861.477 756.551 853.188 756.551 c
844.898 756.551 838.188 763.266 838.188 771.551 c
838.188 779.84 844.898 786.551 853.188 786.551 c
861.477 786.551 868.188 779.84 868.188 771.551 c
f
/DeviceGray {} cs
[0.1489] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 17.9852 7.0875] Tm
0 0 Td
/F8_0 13.2 Tf
(x \(m\))
[6.6
0
3.3
0
4.3956
0
10.2696
0
4.3956
0] Tj
Q
651.328 461.934 m
631.633 454.375 l
S
/DeviceGray {} cs
[0] sc
1242.92 1039.57 m
1242.92 1031.28 1236.21 1024.57 1227.92 1024.57 c
1219.64 1024.57 1212.92 1031.28 1212.92 1039.57 c
1212.92 1047.85 1219.64 1054.57 1227.92 1054.57 c
1236.21 1054.57 1242.92 1047.85 1242.92 1039.57 c
f
851.348 484.406 m
851.348 476.117 844.633 469.406 836.348 469.406 c
828.059 469.406 821.348 476.117 821.348 484.406 c
821.348 492.691 828.059 499.406 836.348 499.406 c
844.633 499.406 851.348 492.691 851.348 484.406 c
f
1207.54 749.215 m
1207.54 740.926 1200.82 734.215 1192.54 734.215 c
1184.25 734.215 1177.54 740.926 1177.54 749.215 c
1177.54 757.5 1184.25 764.215 1192.54 764.215 c
1200.82 764.215 1207.54 757.5 1207.54 749.215 c
f
/DeviceGray {} cs
[0.1489] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 53.0555 32.6117] Tm
0 0 Td
/F8_0 12 Tf
(0)
[6
0] Tj
Q
/DeviceGray {} cs
[0] sc
1181.99 462.641 m
1181.99 454.352 1175.28 447.641 1166.99 447.641 c
1158.7 447.641 1151.99 454.352 1151.99 462.641 c
1151.99 470.926 1158.7 477.641 1166.99 477.641 c
1175.28 477.641 1181.99 470.926 1181.99 462.641 c
f
/DeviceGray {} cs
[0.1489] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 148.058 4.79648] Tm
0 0 Td
/F8_0 13.2 Tf
(y \(m\))
[6.6
0
3.3
0
4.3956
0
10.2696
0
4.3956
0] Tj
Q
1347.43 416.109 m
1365.1 404.598 l
S
/DeviceGray {} cs
[0] sc
1063.64 1271.02 m
1063.64 1262.73 1056.92 1256.02 1048.64 1256.02 c
1040.35 1256.02 1033.64 1262.73 1033.64 1271.02 c
1033.64 1279.31 1040.35 1286.02 1048.64 1286.02 c
1056.92 1286.02 1063.64 1279.31 1063.64 1271.02 c
f
/DeviceGray {} cs
[0.1489] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 140.196 26.8078] Tm
0 0 Td
/F8_0 12 Tf
(0)
[6
0] Tj
Q
/DeviceGray {} cs
[0] sc
1036.14 960.23 m
1036.14 951.945 1029.43 945.23 1021.14 945.23 c
1012.86 945.23 1006.14 951.945 1006.14 960.23 c
1006.14 968.52 1012.86 975.23 1021.14 975.23 c
1029.43 975.23 1036.14 968.52 1036.14 960.23 c
f
1015.52 675.547 m
1015.52 667.258 1008.81 660.547 1000.52 660.547 c
992.234 660.547 985.523 667.258 985.523 675.547 c
985.523 683.832 992.234 690.547 1000.52 690.547 c
1008.81 690.547 1015.52 683.832 1015.52 675.547 c
f
994.902 390.859 m
994.902 382.574 988.191 375.859 979.902 375.859 c
971.617 375.859 964.902 382.574 964.902 390.859 c
964.902 399.148 971.617 405.859 979.902 405.859 c
988.191 405.859 994.902 399.148 994.902 390.859 c
f
953.555 265 m
933.859 257.449 l
S
953.555 265 m
971.227 253.488 l
S
/DeviceGray {} cs
[0.1489] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 72.7781 12.9184] Tm
0 0 Td
/F8_0 12 Tf
(-20)
[3.996
0
6
0
6
0] Tj
28.0313 -1.22188 Td
(-20)
[3.996
0
6
0
6
0] Tj
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font LJFNUH+Times-Roman
%%EOF
